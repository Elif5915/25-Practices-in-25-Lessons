<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQ8AAADYCAYAAAD1Y2YdAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cgAAEnIBXmVb4wAAGqZJREFUeF7tnQnQVtMfxy35lxbryJJ9Z7KkxNgZorEPmlIkQpJl7GthMJpGUiRj
        TaIREtFkJFtjl10hJcoaRWS//763e95+9zzn3Oc+557nfZ/3Pd/PzG/et+d+n9859/Y73/eu564UEUKI
        AzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KI
        EzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KI
        EzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KI
        EzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIEzQPQogTNA9CiBM0D0KIE8GZx99//538ZgbL//rr
        L+o0moqO+IN7HgLfhUqdmYbUEX/QPBKqUajUldLQOuIPmscyqlWo1KWpdR2pjODNw3cBUmem1nWkcoI2
        D98FSJ2ZWtcRN4I1D98FSJ2ZWtcRd4I0D98FSJ2ZWteRYgRnHr4LkDozta4jxQnOPJpC4VNnJq+O+CHI
        PY8sfBcqdWYaSkf8EewJUxO+C5U6Mw2pI/6geSRUo1Cbum7OnDnRTTfdFB1yyCFRu3btov/973/RSiut
        VDZWXnll4+d6QIecG2+8cdSlS5e4rblz5yatL6fS9SD+oHkso9ICDF2HAdyjR49o1VVXTQ10OfBtUVSH
        NtH2l19+WXg9SDGCNw/fBdjUdQ8//HDUpk2b1ICuL+OQgT6MGTPG2/qSygnaPPIWFnXLGTZsWMnAbgjj
        QECHGDp0aNK7UvKuL3EjWPPIW1jULWfcuHElAxv/7tChQ3THHXdEs2bNiv78889EvYKi7SIncqMNtKXa
        lX3A3pBO3naJO0GaR97Com458+bNKzlUadmyZTRq1Kjov//+S1SlFG1XB5oRI0ZEzZs3T/UFfUMfFXnz
        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
        gwZafEflUYFXW+oziOlk9U/iW4f+5fmL7rvdSnXlzEPpiD9oHsvIU6g48YeTfnqRInBjEi4vqlcv4Fge
        exGYxBefYZltrk6YEmbRyiJP/0A1dHn/ojdU/5Quq59585HKCN488hYWlmNO0/bt26eK1BQmgzEF5sTA
        /J5ZVNK/auj0PutUq91KdTbzyJuPVE7Q5pG3sKQOexW4Cco2v0Qe48B3kSPr1Q3ApX9ZuOj0vktc8mVR
        RGcyj7z5iBvBmkfewrLpsBeCh7rkpdxyxoFLsX369Ik++eQT53Z1qq3T10Hhms9GUZ2+7fPmI+4EaR55
        CyuPDldcxowZE88x0alTp3gSIcxqhcDveBcrptvDPBS4ddtXu6A+dHJAIkCRfCZ86HTzyJOPFCM48/BR
        qJKmosNrIPVXatoiz6EZopZ0WDf5KktSnODMoykM9GrobE+56tEYjUMFLokTfwS555FFJQOuKelMg02P
        xmwcKog/uDUF1RqYjUFnGmgymoJxIIg/uDUTXAZcFo1NZxtkrvls1LdOmgp+J/6geSzDV6EqGqNOGgcC
        FMlnoiF0yjzUT+KP4Lemz0IFjVUnjQNRNJ9OQ+lgGnLvg/gj6K3pu1Abs04aB6KxrocEy6VxIIg/gt2a
        1SjUxqyTAwwDrr7aVVRLR/OoHkFuzWoVamPWSeMoN8h8tguqqaN5VI/gtqZLAWbRVHTSOMpFY9YRfwS3
        NZvCQK+GrjEbgoxyOuKPIPc8sqhkwDUlXZ7b0xu7cfD2dL/QigXVGpiNQTdp0qT4pUumQYdoCsaBF3QR
        f9A8ElwGXBbUmWloHfEHzWMZ1SpU6tLUuo5URvDm4bsAqTNT6zpSOUGbh+8CpM5MreuIG8Gah+8CpM5M
        reuIO0Gah+8CpM5MretIMYIzD98FSJ2ZWteR4gRnHk2h8Kkzk1dH/BDknkcWvguVOjMNpSP+CPaEqQnf
        hUqdmYbUEX/QPBKqUajUldLQOuIPmscyqlWo1KWpdR2pjODNw3cBUmem1nWkcoI2D98FSJ2ZWtcRN4I1
        D98FSJ2ZWtcRd4I0D98FSJ2ZWteRYvCEKSHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoH
        IcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoH
        IcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoH
        IcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxAmaByHECZoHIcQJmgchxIEo+j+ZImg7
        0C/ZWAAAAABJRU5ErkJggg==
</value>
  </data>
</root>